/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthSettingsRouteImport } from './routes/_auth/settings'
import { Route as AuthWorkoutsWorkoutIdRouteImport } from './routes/_auth/workouts/$workoutId'

const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingsRoute = AuthSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)
const AuthWorkoutsWorkoutIdRoute = AuthWorkoutsWorkoutIdRouteImport.update({
  id: '/workouts/$workoutId',
  path: '/workouts/$workoutId',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/signin': typeof SigninRoute
  '/settings': typeof AuthSettingsRoute
  '/': typeof AuthIndexRoute
  '/workouts/$workoutId': typeof AuthWorkoutsWorkoutIdRoute
}
export interface FileRoutesByTo {
  '/signin': typeof SigninRoute
  '/settings': typeof AuthSettingsRoute
  '/': typeof AuthIndexRoute
  '/workouts/$workoutId': typeof AuthWorkoutsWorkoutIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/signin': typeof SigninRoute
  '/_auth/settings': typeof AuthSettingsRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/workouts/$workoutId': typeof AuthWorkoutsWorkoutIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/signin' | '/settings' | '/' | '/workouts/$workoutId'
  fileRoutesByTo: FileRoutesByTo
  to: '/signin' | '/settings' | '/' | '/workouts/$workoutId'
  id:
    | '__root__'
    | '/_auth'
    | '/signin'
    | '/_auth/settings'
    | '/_auth/'
    | '/_auth/workouts/$workoutId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  SigninRoute: typeof SigninRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/workouts/$workoutId': {
      id: '/_auth/workouts/$workoutId'
      path: '/workouts/$workoutId'
      fullPath: '/workouts/$workoutId'
      preLoaderRoute: typeof AuthWorkoutsWorkoutIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSettingsRoute: typeof AuthSettingsRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthWorkoutsWorkoutIdRoute: typeof AuthWorkoutsWorkoutIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSettingsRoute: AuthSettingsRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthWorkoutsWorkoutIdRoute: AuthWorkoutsWorkoutIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  SigninRoute: SigninRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
